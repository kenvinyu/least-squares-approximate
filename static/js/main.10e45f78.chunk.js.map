{"version":3,"sources":["components/Degree/Degree.js","Coordinate/Coordinate.js","components/CoordinateAdder/CoordinateAdder.js","components/CoordinateList/CoordinateList.js","components/CoordinateMenu/CoordinateMenu.js","components/Menu/Menu.js","math/worker.js","components/Calculator/Calculator.js","components/App/App.js","index.js"],"names":["isInt","value","isNaN","x","parseFloat","Degree","props","state","degree","handleChange","bind","event","target","this","setState","validDegree","onChange","parseInt","key","preventDefault","maxDegree","id","Form","Group","controlId","Label","Control","type","placeholder","onKeyPress","handleKeyPress","isInvalid","Feedback","React","Component","Coordinate","y","coord","hasOwnProperty","CoordinateAdder","status","checkCoord","isValid","addCoord","msg","autoComplete","CoordinateList","listCoords","coords","map","ListGroup","Item","toString","className","ButtonGroup","Button","variant","onClick","delCoord","CoordinateMenu","isUniqueCoord","found","match","length","isNumber","val","test","isFinite","every","c","equals","Menu","coordinates","math","create","all","calcLeastSquares","A","matrix","Array","fill","v","i","pow","b","A_T","transpose","M","multiply","det","result","inv","valueOf","simplify","format","fraction","reduce","acc","curr","toTex","Calculator","failedToLoad","graph","window","onload","console","log","calc","document","getElementById","Desmos","GraphingCalculator","expressionsCollapsed","err","expressions","slice","latex","color","setExpressions","oldCoordsExpressions","getExpressions","filter","exp","Map","expr","set","removeExpression","newCoords","has","delete","setExpression","values","functions","setUpCoords","Alert","App","handleChangeDegree","handleAddCoord","handleDelCoord","newCoord","concat","tempCoord","forEach","size","Container","fluid","style","padding","Row","noGutters","Col","xs","lg","calcMaxDegree","ReactDOM","render"],"mappings":"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","file":"static/js/main.10e45f78.chunk.js","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nimport './Degree.css';\n\nclass Degree extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdegree: this.props.value, // Textbox value\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\t// For textbox onChange\n\thandleChange(event) {\n\t\tconst value = event.target.value; \n\t\tif (value === \"\" || isInt(value)) { // Only numbers\n\t\t\tthis.setState({degree: value}); // For textbox \n\t\t\tif (this.validDegree(value)) {\n\t\t\t\tthis.props.onChange(parseInt(value)); // For calculations \n\t\t\t} \n\t\t}\n\t}\n\n\t// Prevent 'Enter' default\n\thandleKeyPress(event) {\n\t\tif (event.key === 'Enter') {\n\t\t\tevent.preventDefault(); \n\t\t}\n\t}\n\n\t// Valid degree for calculation purposes\n\tvalidDegree(degree=this.state.degree) {\n\t\treturn isInt(degree) && \n\t\t\t\tdegree >= 0 && \n\t\t\t\tdegree <= this.props.maxDegree ;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"divDegree\">\n\t\t\t\t<Form id=\"formDegree\">\n\t\t\t\t\t<Form.Group controlId=\"formDegree\">\n\t\t\t\t\t\t<Form.Label>Polynomial degree</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tplaceholder=\"Degree\"\n\t\t\t\t\t\t\tvalue={this.state.degree}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\t\tisInvalid={!this.validDegree()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\t\tDegree is a non-negative integer. \n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tMaximum: Number of unique x values - 1\n\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// eslint-disable-next-line\nfunction isInt(value) {\n\tif (isNaN(value)) return false; \n\tconst x = parseFloat(value);\n\treturn (x | 0) === x; \n}\n\nexport default Degree;","class Coordinate {\n\tconstructor(x, y) {\n\t\tthis.x = parseFloat(x); // maybe not as a float? \n\t\tthis.y = parseFloat(y);  \n\t}\n\n\ttoString() {\n\t\treturn `(${this.x}, ${this.y})`;\n\t}\n\n\tequals(coord) {\n\t\treturn coord.hasOwnProperty('x') && coord.x === this.x && coord.hasOwnProperty('y') && coord.y === this.y; \n\t}\n}\n\nexport default Coordinate; ","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nimport './CoordinateAdder.css';\n\nclass CoordinateAdder extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcoord: this.props.value, // Textbox value\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\t// When value of textbox changes \n\thandleChange(event) {\n\t\tconst value = event.target.value; \n\t\tthis.setState({coord: value});\n\t}\n\n\t// For detecting 'Enter' keypresses\n\thandleKeyPress(event) {\n\t\tif (event.key === 'Enter') {\n\t\t\tevent.preventDefault();\n\t\t\tconst status = this.props.checkCoord(this.state.coord);\n\t\t\tif (status.isValid) {\n\t\t\t\tthis.props.addCoord(status.msg.x, status.msg.y);\n\t\t\t\tthis.setState({coord: \"\"});\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst status = this.props.checkCoord(this.state.coord);\n\t\treturn (\n\t\t\t<div id=\"coordinateAdder\">\n\t\t\t\t<Form id=\"formNewCoord\" autoComplete=\"off\">\n\t\t\t\t\t<Form.Group controlId=\"formNewCoord\">\n\t\t\t\t\t\t<Form.Label>Add coordinate</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Coordinate\"\n\t\t\t\t\t\t\tvalue={this.state.coord}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\t\tisValid={status.isValid}\n\t\t\t\t\t\t\tisInvalid={status.isInvalid}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\t\t{status.isInvalid ? status.msg : \"\"}\n\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CoordinateAdder;","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport ClearIcon from '@material-ui/icons/Clear';\n// import SettingsIcon from '@material-ui/icons/Settings';\n\nimport './CoordinateList.css';\n\nclass CoordinateList extends React.Component {\n    render() {\n        const coords = this.props.coords; \n\n\t\tconst listCoords = coords.map((coord) => \n\t\t\t<ListGroup.Item key={coord.toString()} className=\"d-flex flex-row\">\n                <div className=\"vertical-center\">\n                    {coord.toString()}\n                </div>\n                <ButtonGroup className=\"ml-auto\">\n                    {/* <Button variant=\"outline-primary\">\n                        <SettingsIcon/>\n                    </Button> */}\n                    <Button \n                        variant=\"outline-danger\" \n                        onClick={() => this.props.delCoord(coord.x, coord.y)}>\n                        <ClearIcon/>\n                    </Button>\n                </ButtonGroup>\n\t\t\t</ListGroup.Item>\n\t\t);\n        \n        return (\n            <div>\n                <label>Coordinates</label>\n                <ListGroup>\n                    {listCoords}\n                </ListGroup>\n            </div>\n        );\n    }\n}\n\nexport default CoordinateList;","import React from 'react';\n\nimport './CoordinateMenu.css';\n\nimport Coordinate from '../../Coordinate';\nimport CoordinateAdder from '../CoordinateAdder';\nimport CoordinateList from '../CoordinateList';\n\nclass CoordinateMenu extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.checkCoord = this.checkCoord.bind(this);\n\t\tthis.isUniqueCoord = this.isUniqueCoord.bind(this);\n\t}\n\n\t// Check if value matches coordinate syntax\n\t// Returns object {\n\t// \tisValid: Boolean\n\t//\tisInvalid: Boolean     \n\t//  msg: String (for additional info)\n\t// }\n\t// NB can't be both valid and invalid, but can be neither (when empty)\t\n\tcheckCoord(value) {\n\t\t// Empty case \n\t\tif (value === \"\") {\n\t\t\treturn {\n\t\t\t\tisValid: false,\n\t\t\t\tisInvalid: false\n\t\t\t};\n\t\t}\n\n\t\tconst re = /^\\((.*),(.*)\\)$/;\n\t\tconst found = value.match(re);\n\t\tif (found && found.length === 3) {\n\t\t\tconst [, x, y] = found; // x is 1st val, y is 2nd val in coord\n\n\t\t\t// Check if x, y are numbers\n\t\t\tconst isNumber = (val) => !/^\\s*$/.test(val) && isFinite(val); \n\t\t\tif (isNumber(x) && isNumber(y)) {\n\t\t\t\tif (this.isUniqueCoord(x, y)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisValid: true,\n\t\t\t\t\t\tisInvalid: false, \n\t\t\t\t\t\tmsg: {x: x, y: y}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\treturn {\n\t\t\t\t\tisValid: false,\n\t\t\t\t\tisInvalid: true,\n\t\t\t\t\tmsg: \"Coordinate has already been entered\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tisValid: false,\n\t\t\tisInvalid: true, \n\t\t\tmsg: \"Coordinate syntax is (x,y) where x and y are numbers\"\n\t\t}; \n\t}\n\n\tisUniqueCoord(x, y) {\n\t\tconst coord = new Coordinate(x, y);\n\t\treturn this.props.coords.every(c => !coord.equals(c));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"coordinateMenu\">\n\t\t\t\t<CoordinateAdder\n\t\t\t\t\tvalue=\"\"\n\t\t\t\t\taddCoord={this.props.addCoord}\n\t\t\t\t\tcheckCoord={this.checkCoord}\n\t\t\t\t/>\n\t\t\t\t<CoordinateList\n\t\t\t\t\tcoords={this.props.coords}\n\t\t\t\t\tdelCoord={this.props.delCoord}\n\t\t\t\t\tcheckCoord={this.checkCoord}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CoordinateMenu;","import React from 'react';\nimport Degree from '../Degree';\nimport CoordinateMenu from '../CoordinateMenu';\n\nimport './Menu.css';\n\nclass Menu extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"menu\">\n\t\t\t\t<Degree\n\t\t\t\t\tvalue={this.props.degree.value}\n\t\t\t\t\tonChange={this.props.degree.onChange}\n\t\t\t\t\tmaxDegree={this.props.degree.maxDegree}\n\t\t\t\t/>\n\t\t\t\t<CoordinateMenu \n\t\t\t\t\tcoords={this.props.coordinates.coords}\n\t\t\t\t\taddCoord={this.props.coordinates.addCoord}\n\t\t\t\t\tdelCoord={this.props.coordinates.delCoord}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Menu;","import { create, all } from 'mathjs';\n\nconst config = {\n\t// number: 'Fraction'\n};\n\n// eslint-disable-next-line\nconst math = create(all, config); \n\n// Returns latex of polynomial of least squares\nfunction calcLeastSquares(coords, degree) {\n\tif (coords.length <= 0) return null;\n\t\n\tconst A = math.matrix(coords.map(coord => \n\t\tArray(parseInt(degree) + 1).fill(coord.x)\n\t\t\t\t\t\t \t\t   .map((v, i) => math.pow(v, i))\n\t));\n\tconst b = math.matrix(coords.map(coord => coord.y));\n\n\t// x = (A*A)^(-1) A*b\n\tconst A_T = math.transpose(A);\n\tconst M = math.multiply(A_T, A); \n\tconst c = math.multiply(A_T, b); \n\n\tif (math.det(M) === 0) return null;\n\tconst x = math.multiply(math.inv(M), c);\n\n\tconst terms = x.valueOf().map((v, i) => \n\t\tmath.simplify(`${math.format(v, {fraction: 'ratio'})} * x^${i}`));\n\tconst result = terms.reduce((acc, curr) => math.simplify(`(${acc}) + (${curr})`), 0);\n\treturn `y = ${result.toTex()}`;\n}\n\n// eslint-disable-next-line\nfunction print(v) {\n\tconsole.log(math.format(v, 14));\n}\n\nexport default calcLeastSquares; ","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nimport './Calculator.css';\n\n// eslint-disable-next-line\nimport calcLeastSquares from '../../math/worker';\n\nclass Calculator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfailedToLoad: false\n\t\t}\n\t\tthis.graph = null;\n\t\t\n\t\twindow.onload = () => {\n\t\t\tconsole.log(\"window loaded\");\n\t\t\tconst calc = document.getElementById('calc');\n\t\t\ttry {\n\t\t\t\tconst graph = window.Desmos.GraphingCalculator(calc, {\n\t\t\t\t\texpressionsCollapsed: true,\n\t\t\t\t});\n\t\t\t\tthis.graph = graph; \n\t\t\t} catch(err) {\n\t\t\t\tthis.setState({failedToLoad: true});\n\t\t\t}\n\t\t}\n\t}\n\n\tinitCoords() {\n\t\tconst props = this.props.coords.slice(); \n\t\tconst expressions = props.map((coord, i) => ({\n\t\t\tid: `coord${coord.toString()}`,\n\t\t\tlatex: coord.toString(),\n\t\t\tcolor: '#2d70b3'\n\t\t}));\n\t\tthis.graph.setExpressions(expressions);\n\t}\n\n\t// Calculates coordinates to remove, and add \n\t// Assumes graph exists\n\tsetUpCoords() {\n\t\tconst graph = this.graph; \n\t\tconst oldCoordsExpressions = graph.getExpressions().filter(exp => /^coord/.test(exp.id));\n\t\t\n\t\tconst map = new Map();\n\t\t// Set up coordinates for removal\n\t\tfor (const expr of oldCoordsExpressions) {\n\t\t\tmap.set(expr.id, () => graph.removeExpression({id: expr.id}));\n\t\t}\n\n\t\tconst newCoords = this.props.coords.slice();\n\t\tfor (const coord of newCoords) {\n\t\t\tconst id = `coord${coord.toString()}`\n\t\t\tif (map.has(id)) { // Don't remove existing coordinate\n\t\t\t\tmap.delete(id);\n\t\t\t} else { // Add new coordinate\n\t\t\t\tmap.set(id, () => graph.setExpression({\n\t\t\t\t\tid: id,\n\t\t\t\t\tlatex: coord.toString(),\n\t\t\t\t\tcolor: '#2d70b3'\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\n\t\t// Run anonymous functions\n\t\tfor (const functions of map.values()) {\n\t\t\tfunctions();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst graph = this.graph; \n\t\tif (graph) {\n\t\t\tthis.setUpCoords();\n\t\t\tconst result = calcLeastSquares(this.props.coords, this.props.degree)\n\t\t\tif (result) {\n\t\t\t\tgraph.setExpression({\n\t\t\t\t\tid: 'leastSquares',\n\t\t\t\t\tlatex: result,\n\t\t\t\t\tcolor: '#c74440'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div id=\"calc\">\n\t\t\t\t{this.state.failedToLoad && \n\t\t\t\t\t<Alert variant='danger'>\n\t\t\t\t\t\tCould not load Desmos.\n\t\t\t\t\t</Alert>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Calculator; ","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport './App.css';\nimport Menu from '../Menu';\n// eslint-disable-next-line\nimport Calculator from '../Calculator';\nimport Coordinate from '../../Coordinate';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdegree: 1,\n\t\t\tcoords: []\n\t\t};\n\t\tthis.handleChangeDegree = this.handleChangeDegree.bind(this);\n\t\tthis.handleAddCoord = this.handleAddCoord.bind(this);\n\t\tthis.handleDelCoord = this.handleDelCoord.bind(this);\n\t}\n\n\thandleChangeDegree(value) {\n\t\tthis.setState({degree: value});\n\t}\n\n\thandleAddCoord(x, y) {\n\t\tconst newCoord = new Coordinate(x, y);\n\t\tconst coords = this.state.coords;\n\t\tthis.setState({\n\t\t\tcoords: coords.concat([newCoord])\n\t\t})\n\t}\n\n\thandleDelCoord(x, y) {\n\t\tconst tempCoord = new Coordinate(x, y);\n\t\tconst coords = this.state.coords.slice();\n\t\tthis.setState({\n\t\t\tcoords: coords.filter((coord) => !tempCoord.equals(coord))\n\t\t})\n\t}\n\n\tcalcMaxDegree() {\n\t\tconst map = new Map(); \n\t\tthis.state.coords.forEach(coord => map.set(coord.x, 0)); // 0 is just random value\n\t\treturn map.size - 1;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid='true' style={{padding: 0}}>\n\t\t\t\t<Row noGutters='true'>\n\t\t\t\t\t<Col xs={12} lg={3}>\n\t\t\t\t\t\t<Menu \n\t\t\t\t\t\t\tdegree={{\n\t\t\t\t\t\t\t\tvalue: this.state.degree,\n\t\t\t\t\t\t\t\tonChange: this.handleChangeDegree,\n\t\t\t\t\t\t\t\tmaxDegree: this.calcMaxDegree(),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcoordinates={{\n\t\t\t\t\t\t\t\tcoords: this.state.coords,\n\t\t\t\t\t\t\t\taddCoord: this.handleAddCoord,\n\t\t\t\t\t\t\t\tdelCoord: this.handleDelCoord\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Calculator\n\t\t\t\t\t\t\tdegree={this.state.degree || 0}\n\t\t\t\t\t\t\tcoords={this.state.coords}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t} \n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}